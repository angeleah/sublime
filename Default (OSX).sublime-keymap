[
  // New Snippet
  { "keys": ["ctrl+shift+super+s"], "command": "new_snippet"},
  // Close all windows
  { "keys": ["super+alt+ctrl+shift+w"], "command": "close_all" },
  // Readline style toggle comment
  { "keys": ["ctrl+forward_slash"], "command": "toggle_comment", "args": { "block": false } },
  // Readline fix select line up
  { "keys": ["ctrl+shift+p"], "command": "move", "args": { "by": "lines", "forward": false, "extend": true } },
  // Readline fix by word ends
  { "keys": ["alt+f"], "command": "move", "args": { "by": "word_ends", "forward": true } },
  { "keys": ["alt+b"], "command": "move", "args": { "by": "word_ends", "forward": false } },
  // Readline fix select by word ends
  { "keys": ["shift+alt+b"], "command": "move", "args": { "by": "word_ends", "forward": false, "extend": true } },
  { "keys": ["shift+alt+f"], "command": "move", "args": { "by": "word_ends", "forward": true, "extend": true } },
  // Readline fix beginning of line to be soft
  { "keys": ["ctrl+a"], "command": "move_to", "args": { "to": "bol" } },
  { "keys": ["alt+a"], "command": "move_to", "args": { "to": "hardbol" } },
  // Readline style swap line
  { "keys": ["ctrl+super+p"], "command": "swap_line_up" },
  { "keys": ["ctrl+super+n"], "command": "swap_line_down" },
  // Reaadline style beginning and end of file
  { "keys": ["alt+p"], "command": "move_to", "args": { "to": "bof" } },
  { "keys": ["alt+n"], "command": "move_to", "args": { "to": "eof" } },
  // Readline style delete word
  { "keys": ["alt+d"], "command": "delete_word", "args": { "forward": true, "sub_words": true } },
  { "keys": ["ctrl+alt+d"], "command": "delete_word", "args": { "forward": false, "sub_words": true } },
  // Readline select lines
  { "keys": ["ctrl+shift+alt+n"], "command": "select_lines", "args": { "forward": true } },
  { "keys": ["ctrl+shift+alt+p"], "command": "select_lines", "args": { "forward": false } },


  // Disable arrows
  // { "keys": ["up"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["down"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["right"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["left"], "command": "insert_snippet", "args": {"contents": ""} },

  // { "keys": ["super+up"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["super+down"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["super+right"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["super+left"], "command": "insert_snippet", "args": {"contents": ""} },

  // { "keys": ["ctrl+up"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["ctrl+down"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["ctrl+right"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["ctrl+left"], "command": "insert_snippet", "args": {"contents": ""} },

  // { "keys": ["ctrl+super+up"], "command": "insert_snippet", "args": {"contents": ""} },
  // { "keys": ["ctrl+super+down"], "command": "insert_snippet", "args": {"contents": ""} },

  // Rename file
  { "keys": ["super+alt+ctrl+shift+r"], "command": "side_bar_rename" },
  // Move file
  { "keys": ["super+alt+ctrl+shift+m"], "command": "side_bar_move" },
  // Quick File Creation
  { "keys": ["super+n"], "command": "advanced_new_file_new"},
  // Skip next selection cmd+d
  { "keys": ["alt+super+d"], "command": "find_under_expand_skip" },
  // Title/Upper/Lower case
  { "keys": ["super+alt+u"], "command": "title_case" },
  { "keys": ["super+alt+ctrl+u"], "command": "upper_case" },
  { "keys": ["super+alt+l"], "command": "lower_case" },
  // Hash rocket
  { "keys": ["super+alt+="], "command": "insert_snippet", "args": {"contents": "=>"} },
  // Arrow
  { "keys": ["super+alt+-"], "command": "insert_snippet", "args": {"contents": "->"} },
  // Backtick quotes
  { "keys": ["`"], "command": "insert_snippet", "args": {"name": "Packages/User/snippets/All-backticks.sublime-snippet"} },
  // Paramify
  { "keys": ["ctrl+shift+alt+super+p"], "command": "insert_snippet", "args": {"name": "Packages/User/snippets/ruby-paramify.sublime-snippet"} },
  // Letify
  { "keys": ["ctrl+shift+l"], "command": "insert_snippet", "args": {"name": "Packages/User/snippets/ruby-let.sublime-snippet"} },
  // Unparamify
  { "keys": ["ctrl+shift+super+p"], "command": "insert_snippet", "args": {"name": "Packages/User/snippets/ruby-unparamify.sublime-snippet"} },
  // Convert old-school hashes
  { "keys": ["ctrl+alt+super+="], "command": "insert_snippet", "args": {"name": "Packages/User/snippets/ruby-hash-convert.sublime-snippet"} },
  // Symbolize
  { "keys": ["ctrl+shift+;"], "command": "insert_snippet", "args": {"name": "Packages/User/snippets/ruby-symbolize.sublime-snippet"} },
  // Unsymbolize
  { "keys": ["super+shift+'"], "command": "insert_snippet", "args": {"name": "Packages/User/snippets/ruby-unsymbolize.sublime-snippet"} },
  // TextMate style drawer toggle
  { "keys": ["ctrl+super+alt+d"], "command": "toggle_side_bar" },
  // Open latest migration
  { "keys": ["super+shift+m"], "command": "rails_latest_migration"},
  // Show migrations list
  { "keys": ["super+ctrl+shift+m"], "command": "rails_migrations_list"},
  // Toggle Mini Map
  { "keys": ["ctrl+super+alt+m"], "command": "toggle_minimap" },
  // TextMate style bookmark navigation
  { "keys": ["f2"], "command": "next_bookmark" },
  // TextMate style find dialogs
  { "keys": ["super+f"], "command": "show_panel", "args": {"panel": "replace"} },
  { "keys": ["super+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },
  { "keys": ["super+alt+f"], "command": "replace_next" },
  { "keys": ["super+g"], "command": "find_next" },
  { "keys": ["super+shift+g"], "command": "find_prev" },
  // Custom tab and pane navigation
  { "keys": ["super+alt+left"], "command": "prev_view" },
  { "keys": ["super+alt+right"], "command": "next_view" },
  // Reopen tab (Chrome style)
  { "keys": ["super+shift+t"], "command": "reopen_last_file" },
  // swap the keybindings for paste and paste_and_indent
  { "keys": ["super+v"], "command": "paste_and_indent" },
  { "keys": ["super+shift+v"], "command": "paste" },
  // Sort lines
  { "keys": ["f5"], "command": "sort_lines", "args": {"case_sensitive": false} },
  // Change quotes
  { "keys": ["ctrl+shift+'"], "command": "change_quotes" },
  // Color picker
  { "keys": ["super+alt+c"], "command": "color_pick" },

  // Ruby test
  { "keys": ["super+shift+r"], "command": "run_single_ruby_test",
    "context": [ { "key": "selector", "operator": "equal",
                   "operand": "source.ruby, source.rspec, text.gherkin.feature"
               } ]
  },
  // single test
  { "keys": ["super+r"], "command": "run_all_ruby_test",
      "context": [ { "key": "selector", "operator": "equal",
         "operand": "source.ruby, source.rspec, text.gherkin.feature"
                } ]
  },
  // test file
  { "keys": ["super+shift+e"], "command": "run_last_ruby_test",
    "context": [ { "key": "selector", "operator": "equal",
       "operand": "source.ruby, source.rspec, text.gherkin.feature"
               } ]

  },
  // test last test file
  { "keys": ["super+shift+l"], "command": "run_last_ruby_test",
    "context": [ { "key": "selector", "operator": "equal",
       "operand": "source.ruby, source.rspec, text.gherkin.feature"
               } ]

  },
  // test last test file
  { "keys": ["super+shift+x"], "command": "show_test_panel" },
  // show test panel
  { "keys": ["alt+shift+v"], "command": "verify_ruby_file",
    "context": [ { "key": "selector", "operator": "equal",
                   "operand": "source.ruby"
               } ]
  },
  // verify ruby syntax
  { "keys": ["super+period"],
      "command": "switch_between_code_and_test",
      "args": {"split_view": false},
      "context": [ { "key": "selector", "operator": "equal",
                   "operand": "source.ruby, source.rspec, text.gherkin.feature"
               } ]
  },
  // switch between code and test in single mode
  { "keys": ["super+ctrl+period"],
      "command": "switch_between_code_and_test",
      "args": {"split_view": true},
      "context": [ { "key": "selector", "operator": "equal",
                   "operand": "source.ruby, source.rspec, text.gherkin.feature"
               } ]
  },
  // switch between code and test in split view
  { "keys": ["super+ctrl+r"], "command": "reveal_in_side_bar" }
]
